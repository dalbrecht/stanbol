/*
* Licensed to the Apache Software Foundation (ASF) under one or more
* contributor license agreements.  See the NOTICE file distributed with
* this work for additional information regarding copyright ownership.
* The ASF licenses this file to You under the Apache License, Version 2.0
* (the "License"); you may not use this file except in compliance with
* the License.  You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.4-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.13 at 09:50:16 AM EEST 
//

package org.apache.stanbol.ontologymanager.store.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{model.rest.persistence.iks.srdc.com.tr}PropertyMetaInformation"/>
 *         &lt;element ref="{model.rest.persistence.iks.srdc.com.tr}Domain" minOccurs="0"/>
 *         &lt;element ref="{model.rest.persistence.iks.srdc.com.tr}Range" minOccurs="0"/>
 *         &lt;element ref="{model.rest.persistence.iks.srdc.com.tr}EquivalentProperties"/>
 *         &lt;element ref="{model.rest.persistence.iks.srdc.com.tr}SuperProperties"/>
 *       &lt;/sequence>
 *       &lt;attribute name="isFunctional" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="isInverseFunctional" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="isTransitive" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="isSymmetric" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {"propertyMetaInformation", "domain", "range", "equivalentProperties",
                                 "superProperties"})
@XmlRootElement(name = "ObjectPropertyContext")
public class ObjectPropertyContext {

    @XmlElement(name = "PropertyMetaInformation", required = true)
    protected PropertyMetaInformation propertyMetaInformation;
    @XmlElement(name = "Domain")
    protected Domain domain;
    @XmlElement(name = "Range")
    protected Range range;
    @XmlElement(name = "EquivalentProperties", required = true)
    protected EquivalentProperties equivalentProperties;
    @XmlElement(name = "SuperProperties", required = true)
    protected SuperProperties superProperties;
    @XmlAttribute(namespace = "model.rest.persistence.iks.srdc.com.tr", required = true)
    protected boolean isFunctional;
    @XmlAttribute(namespace = "model.rest.persistence.iks.srdc.com.tr", required = true)
    protected boolean isInverseFunctional;
    @XmlAttribute(namespace = "model.rest.persistence.iks.srdc.com.tr", required = true)
    protected boolean isTransitive;
    @XmlAttribute(namespace = "model.rest.persistence.iks.srdc.com.tr", required = true)
    protected boolean isSymmetric;

    /**
     * Gets the value of the propertyMetaInformation property.
     * 
     * @return possible object is {@link PropertyMetaInformation }
     * 
     */
    public PropertyMetaInformation getPropertyMetaInformation() {
        return propertyMetaInformation;
    }

    /**
     * Sets the value of the propertyMetaInformation property.
     * 
     * @param value
     *            allowed object is {@link PropertyMetaInformation }
     * 
     */
    public void setPropertyMetaInformation(PropertyMetaInformation value) {
        this.propertyMetaInformation = value;
    }

    /**
     * Gets the value of the domain property.
     * 
     * @return possible object is {@link Domain }
     * 
     */
    public Domain getDomain() {
        return domain;
    }

    /**
     * Sets the value of the domain property.
     * 
     * @param value
     *            allowed object is {@link Domain }
     * 
     */
    public void setDomain(Domain value) {
        this.domain = value;
    }

    /**
     * Gets the value of the range property.
     * 
     * @return possible object is {@link Range }
     * 
     */
    public Range getRange() {
        return range;
    }

    /**
     * Sets the value of the range property.
     * 
     * @param value
     *            allowed object is {@link Range }
     * 
     */
    public void setRange(Range value) {
        this.range = value;
    }

    /**
     * Gets the value of the equivalentProperties property.
     * 
     * @return possible object is {@link EquivalentProperties }
     * 
     */
    public EquivalentProperties getEquivalentProperties() {
        return equivalentProperties;
    }

    /**
     * Sets the value of the equivalentProperties property.
     * 
     * @param value
     *            allowed object is {@link EquivalentProperties }
     * 
     */
    public void setEquivalentProperties(EquivalentProperties value) {
        this.equivalentProperties = value;
    }

    /**
     * Gets the value of the superProperties property.
     * 
     * @return possible object is {@link SuperProperties }
     * 
     */
    public SuperProperties getSuperProperties() {
        return superProperties;
    }

    /**
     * Sets the value of the superProperties property.
     * 
     * @param value
     *            allowed object is {@link SuperProperties }
     * 
     */
    public void setSuperProperties(SuperProperties value) {
        this.superProperties = value;
    }

    /**
     * Gets the value of the isFunctional property.
     * 
     */
    public boolean isIsFunctional() {
        return isFunctional;
    }

    /**
     * Sets the value of the isFunctional property.
     * 
     */
    public void setIsFunctional(boolean value) {
        this.isFunctional = value;
    }

    /**
     * Gets the value of the isInverseFunctional property.
     * 
     */
    public boolean isIsInverseFunctional() {
        return isInverseFunctional;
    }

    /**
     * Sets the value of the isInverseFunctional property.
     * 
     */
    public void setIsInverseFunctional(boolean value) {
        this.isInverseFunctional = value;
    }

    /**
     * Gets the value of the isTransitive property.
     * 
     */
    public boolean isIsTransitive() {
        return isTransitive;
    }

    /**
     * Sets the value of the isTransitive property.
     * 
     */
    public void setIsTransitive(boolean value) {
        this.isTransitive = value;
    }

    /**
     * Gets the value of the isSymmetric property.
     * 
     */
    public boolean isIsSymmetric() {
        return isSymmetric;
    }

    /**
     * Sets the value of the isSymmetric property.
     * 
     */
    public void setIsSymmetric(boolean value) {
        this.isSymmetric = value;
    }

}
